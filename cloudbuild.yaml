timeout: 7200s

substitutions:
  _PROJECT_ID: "flamingo-302814"
  _REPOSITORY: "discord-bot"
  _PROJECT: "discord-bot"
  _DEPLOYMENT: "deployment-discord-bot"
  _NAMESPACE: "discord-bot"
  _CREDENTIALS: "flamingo-master"
  _ZONE: "europe-west4-a"
  _TAG: "eu.gcr.io/${_PROJECT_ID}/${_REPOSITORY}"

steps:
  - id: build
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: bash
    args:
      - -c
      - |
        set -xeou pipefail
        /usr/bin/docker build --tag ${_TAG}:$SHORT_SHA --tag ${_TAG}:latest --build-arg VERSION=$SHORT_SHA --build-arg PROJECT=${_PROJECT} .
        /usr/bin/docker push ${_TAG}
  
  - id: rollout
    name: 'gcr.io/cloud-builders/gke-deploy'
    entrypoint: bash
    args:
      - -c
      - |
        set -xeou pipefail
        
        gcloud container clusters get-credentials "${_CREDENTIALS}" --zone "${_ZONE}"
        
        kubectl rollout restart deployment ${_DEPLOYMENT} -n ${_NAMESPACE}
        
  ## Cleans up old images, remove this to keep image history.
  ## This is just so that GKE wont price more for storing images
  - id: cleanup
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
      
        old_images=$(gcloud container images list-tags ${_TAG} --format='get(tags)' | grep -v ";latest")
        
        echo "$old_images" | while read -r line; do
          line=$(echo $line|tr -d '\r')
          gcloud container images delete ${_TAG}:${line} --quiet
        done;
